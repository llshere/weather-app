{"version":3,"sources":["pictures/Cloudy.png","pictures/LightRain.png","pictures/Snow.png","pictures/Sunny.png","pictures/Windy.png","fakeData.js","components/TodayWeather.js","pictures/Weather.jpg","components/FutureWeather.js","components/Sidebar.js","App.js","index.js"],"names":["countryList","countryName","cityList","timezone","country","todayData","cityName","todayWeather","img","Cloudy","time","temperature","Sunny","LightRain","Snow","Windy","dateArray","Array","keys","map","value","moment","add","format","futureData","futureWeather","high","low","useStyles","makeStyles","theme","createStyles","root","backgroundColor","gridList","flexWrap","margin","gridListTile","title","color","palette","primary","light","subtitle","titleBar","background","image","top","height","width","left","position","transform","cityTitle","padding","cityTime","TodayWeather","props","classes","city","tz","find","selectedCityList","currentTime","timeRef","useRef","useEffect","current","scrollIntoView","behavior","block","inline","className","interval","GridList","cols","GridListTile","slice","ref","src","alt","GridListTileBar","lineChart","marginTop","marginLeft","marginRight","FutureWeather","selectedCity","selectedCityHigh","selectedCitylow","futureCityData","index","date","replace","ResponsiveContainer","LineChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","selectBox","marginBottom","selectArea","display","Sidebar","setCountry","setCity","React","useState","displayText","setDisplayText","InputLabel","Select","onChange","event","target","MenuItem","leftArea","rightArea","app","imageRoot","paddingTop","objectFit","App","Weather","document","body","style","overflow","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.19b15e22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Cloudy.2aea09bd.png\";","export default __webpack_public_path__ + \"static/media/LightRain.c1fc932d.png\";","export default __webpack_public_path__ + \"static/media/Snow.d6b5ccd5.png\";","export default __webpack_public_path__ + \"static/media/Sunny.659831bf.png\";","export default __webpack_public_path__ + \"static/media/Windy.4d3e642f.png\";","import Cloudy from \"./pictures/Cloudy.png\";\r\nimport LightRain from \"./pictures/LightRain.png\";\r\nimport Snow from \"./pictures/Snow.png\";\r\nimport Sunny from \"./pictures/Sunny.png\";\r\nimport Windy from \"./pictures/Windy.png\";\r\nimport moment from \"moment\";\r\n\r\nexport const countryList = [\r\n  {\r\n    countryName: \"China\",\r\n    cityList: [\"Beijing\", \"Shanghai\"],\r\n  },\r\n  {\r\n    countryName: \"Japan\",\r\n    cityList: [\"Tokyo\", \"Osaka\"],\r\n  },\r\n];\r\n\r\nexport const timezone = [\r\n  { country: \"China\", timezone: \"Asia/Shanghai\" },\r\n  { country: \"Japan\", timezone: \"Japan\" },\r\n];\r\n\r\nexport const todayData = [\r\n  {\r\n    cityName: \"Beijing\",\r\n    todayWeather: [\r\n      { img: Cloudy, time: \"00:00\", temperature: \"22℃\" },\r\n      { img: Sunny, time: \"01:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"02:00\", temperature: \"25℃\" },\r\n      { img: LightRain, time: \"03:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"04:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"05:00\", temperature: \"21℃\" },\r\n      { img: Snow, time: \"06:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"07:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"08:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"09:00\", temperature: \"21℃\" },\r\n      { img: Sunny, time: \"10:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"11:00\", temperature: \"22℃\" },\r\n      { img: Snow, time: \"12:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"13:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"14:00\", temperature: \"20℃\" },\r\n      { img: Windy, time: \"15:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"16:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"17:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"18:00\", temperature: \"23℃\" },\r\n      { img: Cloudy, time: \"19:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"20:00\", temperature: \"24℃\" },\r\n      { img: Sunny, time: \"21:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"22:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"23:00\", temperature: \"20℃\" },\r\n    ],\r\n  },\r\n  {\r\n    cityName: \"Shanghai\",\r\n    todayWeather: [\r\n      { img: Cloudy, time: \"00:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"01:00\", temperature: \"20℃\" },\r\n      { img: Snow, time: \"02:00\", temperature: \"21℃\" },\r\n      { img: LightRain, time: \"03:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"04:00\", temperature: \"22℃\" },\r\n      { img: Cloudy, time: \"05:00\", temperature: \"20℃\" },\r\n      { img: Snow, time: \"06:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"07:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"08:00\", temperature: \"23℃\" },\r\n      { img: Cloudy, time: \"09:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"10:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"11:00\", temperature: \"20℃\" },\r\n      { img: Snow, time: \"12:00\", temperature: \"23℃\" },\r\n      { img: Cloudy, time: \"13:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"14:00\", temperature: \"20℃\" },\r\n      { img: Windy, time: \"15:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"16:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"17:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"18:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"19:00\", temperature: \"25℃\" },\r\n      { img: Cloudy, time: \"20:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"21:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"22:00\", temperature: \"24℃\" },\r\n      { img: Sunny, time: \"23:00\", temperature: \"20℃\" },\r\n    ],\r\n  },\r\n  {\r\n    cityName: \"Tokyo\",\r\n    todayWeather: [\r\n      { img: LightRain, time: \"00:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"01:00\", temperature: \"22℃\" },\r\n      { img: LightRain, time: \"02:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"03:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"04:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"05:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"06:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"07:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"08:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"09:00\", temperature: \"21℃\" },\r\n      { img: LightRain, time: \"10:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"11:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"12:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"13:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"14:00\", temperature: \"21℃\" },\r\n      { img: Windy, time: \"15:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"16:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"17:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"18:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"19:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"20:00\", temperature: \"21℃\" },\r\n      { img: Sunny, time: \"21:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"22:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"23:00\", temperature: \"21℃\" },\r\n    ],\r\n  },\r\n  {\r\n    cityName: \"Osaka\",\r\n    todayWeather: [\r\n      { img: Cloudy, time: \"00:00\", temperature: \"21℃\" },\r\n      { img: LightRain, time: \"01:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"02:00\", temperature: \"20℃\" },\r\n      { img: LightRain, time: \"03:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"04:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"05:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"06:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"07:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"08:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"09:00\", temperature: \"21℃\" },\r\n      { img: LightRain, time: \"10:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"11:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"12:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"13:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"14:00\", temperature: \"20℃\" },\r\n      { img: Windy, time: \"15:00\", temperature: \"21℃\" },\r\n      { img: Cloudy, time: \"16:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"17:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"18:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"19:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"20:00\", temperature: \"21℃\" },\r\n      { img: Sunny, time: \"21:00\", temperature: \"20℃\" },\r\n      { img: Cloudy, time: \"22:00\", temperature: \"20℃\" },\r\n      { img: Sunny, time: \"23:00\", temperature: \"21℃\" },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const dateArray = [...Array(13).keys()].map((value) =>\r\n  moment()\r\n    .add(value + 1, \"d\")\r\n    .format(\"MM/DD\")\r\n);\r\n\r\nexport const futureData = [\r\n  {\r\n    cityName: \"Beijing\",\r\n    futureWeather: {\r\n      high: [\r\n        \"20℃\",\r\n        \"24℃\",\r\n        \"18℃\",\r\n        \"21℃\",\r\n        \"21℃\",\r\n        \"25℃\",\r\n        \"23℃\",\r\n        \"22℃\",\r\n        \"25℃\",\r\n        \"18℃\",\r\n        \"20℃\",\r\n        \"18℃\",\r\n        \"23℃\",\r\n        \"24℃\",\r\n        \"25℃\",\r\n      ],\r\n      low: [\r\n        \"18℃\",\r\n        \"16℃\",\r\n        \"15℃\",\r\n        \"20℃\",\r\n        \"15℃\",\r\n        \"17℃\",\r\n        \"19℃\",\r\n        \"18℃\",\r\n        \"21℃\",\r\n        \"18℃\",\r\n        \"19℃\",\r\n        \"17℃\",\r\n        \"19℃\",\r\n        \"22℃\",\r\n        \"16℃\",\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    cityName: \"Shanghai\",\r\n    futureWeather: {\r\n      high: [\r\n        \"25℃\",\r\n        \"20℃\",\r\n        \"21℃\",\r\n        \"20℃\",\r\n        \"24℃\",\r\n        \"24℃\",\r\n        \"25℃\",\r\n        \"21℃\",\r\n        \"24℃\",\r\n        \"25℃\",\r\n        \"25℃\",\r\n        \"21℃\",\r\n        \"23℃\",\r\n        \"25℃\",\r\n        \"24℃\",\r\n      ],\r\n      low: [\r\n        \"16℃\",\r\n        \"17℃\",\r\n        \"18℃\",\r\n        \"16℃\",\r\n        \"20℃\",\r\n        \"17℃\",\r\n        \"17℃\",\r\n        \"17℃\",\r\n        \"15℃\",\r\n        \"20℃\",\r\n        \"19℃\",\r\n        \"20℃\",\r\n        \"22℃\",\r\n        \"22℃\",\r\n        \"15℃\",\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    cityName: \"Tokyo\",\r\n    futureWeather: {\r\n      high: [\r\n        \"17℃\",\r\n        \"22℃\",\r\n        \"23℃\",\r\n        \"19℃\",\r\n        \"22℃\",\r\n        \"23℃\",\r\n        \"21℃\",\r\n        \"23℃\",\r\n        \"25℃\",\r\n        \"21℃\",\r\n        \"19℃\",\r\n        \"23℃\",\r\n        \"24℃\",\r\n        \"20℃\",\r\n        \"17℃\",\r\n      ],\r\n      low: [\r\n        \"15℃\",\r\n        \"16℃\",\r\n        \"19℃\",\r\n        \"17℃\",\r\n        \"20℃\",\r\n        \"18℃\",\r\n        \"17℃\",\r\n        \"21℃\",\r\n        \"20℃\",\r\n        \"20℃\",\r\n        \"16℃\",\r\n        \"16℃\",\r\n        \"16℃\",\r\n        \"15℃\",\r\n        \"15℃\",\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    cityName: \"Osaka\",\r\n    futureWeather: {\r\n      high: [\r\n        \"20℃\",\r\n        \"22℃\",\r\n        \"25℃\",\r\n        \"24℃\",\r\n        \"25℃\",\r\n        \"24℃\",\r\n        \"21℃\",\r\n        \"19℃\",\r\n        \"21℃\",\r\n        \"19℃\",\r\n        \"18℃\",\r\n        \"24℃\",\r\n        \"24℃\",\r\n        \"23℃\",\r\n        \"22℃\",\r\n      ],\r\n      low: [\r\n        \"17℃\",\r\n        \"15℃\",\r\n        \"25℃\",\r\n        \"23℃\",\r\n        \"18℃\",\r\n        \"19℃\",\r\n        \"18℃\",\r\n        \"17℃\",\r\n        \"15℃\",\r\n        \"16℃\",\r\n        \"17℃\",\r\n        \"22℃\",\r\n        \"20℃\",\r\n        \"16℃\",\r\n        \"19℃\",\r\n      ],\r\n    },\r\n  },\r\n];\r\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { GridList } from \"@material-ui/core\";\r\nimport { GridListTile } from \"@material-ui/core/\";\r\nimport { GridListTileBar } from \"@material-ui/core\";\r\nimport { todayData, timezone } from \"../fakeData.js\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n    },\r\n    gridList: {\r\n      flexWrap: \"nowrap\",\r\n      margin: \"0\",\r\n    },\r\n    gridListTile: { margin: \"0\" },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    subtitle: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        \"linear-gradient(to top, rgba(210, 243, 244,1)0%, rgba(0,0,0,0) 100%)\",\r\n    },\r\n    image: {\r\n      top: 0,\r\n      height: \"75%\",\r\n      width: \"auto\",\r\n      left: \"50%\",\r\n      position: \"relative\",\r\n      transform: \"translateX(-50%)\",\r\n    },\r\n    cityTitle: {\r\n      padding: \"0.5em\",\r\n    },\r\n    cityTime: {\r\n      padding: \"0.5em\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function TodayWeather(props) {\r\n  const classes = useStyles();\r\n  const { city, country } = props;\r\n\r\n  const tz = timezone.find((value) => value.country === country).timezone;\r\n\r\n  const selectedCity = todayData.find((value) => value.cityName === city);\r\n  const selectedCityList = selectedCity.todayWeather;\r\n\r\n  const currentTime = moment().tz(tz).format(\"H HH:mm\");\r\n\r\n  const timeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    timeRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"start\",\r\n    });\r\n  }, [timeRef, city]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.cityTitle}>{city}</div>\r\n      <Moment interval={1000} tz={tz} className={classes.cityTime}></Moment>\r\n      <div className={classes.root}>\r\n        <GridList className={classes.gridList} cols={5}>\r\n          {selectedCityList.map((value) => (\r\n            <GridListTile\r\n              className={classes.GridListTile}\r\n              key={value.time}\r\n              {...(value.time.slice(0, 2) === currentTime.slice(0, 2)\r\n                ? { ref: timeRef }\r\n                : {})}\r\n            >\r\n              <img className={classes.image} src={value.img} alt={\"img\"} />\r\n              <GridListTileBar\r\n                title={value.time}\r\n                subtitle={value.temperature}\r\n                classes={{\r\n                  root: classes.titleBar,\r\n                  title: classes.title,\r\n                  subtitle: classes.subtitle,\r\n                }}\r\n              ></GridListTileBar>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Weather.966817c6.jpg\";","import React from \"react\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { futureData, dateArray } from \"../fakeData.js\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    lineChart: {\r\n      width: \"80%\",\r\n      height: \"80%\",\r\n      marginTop: \"10%\",\r\n      marginLeft: \"10%\",\r\n      marginRight: \"10%\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function FutureWeather(props) {\r\n  const classes = useStyles();\r\n  const selectedCity = futureData.find(\r\n    (value) => value.cityName === props.city\r\n  );\r\n\r\n  const selectedCityHigh = selectedCity.futureWeather.high;\r\n  const selectedCitylow = selectedCity.futureWeather.low;\r\n\r\n  const futureCityData = dateArray.map((value, index) => ({\r\n    date: value,\r\n    high: selectedCityHigh[index].replace(\"℃\", \"\"),\r\n    low: selectedCitylow[index].replace(\"℃\", \"\"),\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"80%\" height=\"50%\" margin=\"auto\">\r\n      <LineChart className={classes.lineChart} data={futureCityData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"high\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"low\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { InputLabel, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { countryList } from \"../fakeData.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  selectBox: {\r\n    width: \"100%\",\r\n    marginBottom: \"20%\",\r\n  },\r\n  selectArea: {\r\n    marginTop: \"20%\",\r\n    width: \"75%\",\r\n    display: \"block\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n\r\n  const { country, setCountry, setCity } = props;\r\n  const [displayText, setDisplayText] = React.useState(\"Beijing\");\r\n\r\n  const handleChangeCountry = (event) => {\r\n    setDisplayText(\"\");\r\n    setCountry(event.target.value);\r\n  };\r\n  const handleChangeCity = (event) => {\r\n    setCity(event.target.value);\r\n    setDisplayText(event.target.value);\r\n  };\r\n\r\n  const selectedCountry = countryList.find(\r\n    (value) => value.countryName === country\r\n  );\r\n  const selectedCityList = selectedCountry.cityList;\r\n\r\n  return (\r\n    <div className={classes.selectArea}>\r\n      <InputLabel>country</InputLabel>\r\n      <Select\r\n        className={classes.selectBox}\r\n        value={country}\r\n        onChange={handleChangeCountry}\r\n      >\r\n        {countryList.map((value, index) => (\r\n          <MenuItem value={value.countryName} key={index}>\r\n            {value.countryName}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <InputLabel>city</InputLabel>\r\n      <Select\r\n        className={classes.selectBox}\r\n        value={displayText}\r\n        onChange={handleChangeCity}\r\n      >\r\n        {selectedCityList.map((value, index) => (\r\n          <MenuItem value={value} key={index}>\r\n            {value}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TodayWeather from \"./components/TodayWeather\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Weather from \"./pictures/Weather.jpg\";\r\nimport FutureWeather from \"./components/FutureWeather\";\r\nimport Sidebar from \"./components/Sidebar\";\r\n\r\nconst useStyles = makeStyles({\r\n  leftArea: {\r\n    height: \"100vh\",\r\n    width: \"25%\",\r\n    backgroundColor: \"lightblue\",\r\n  },\r\n  rightArea: {\r\n    height: \"100vh\",\r\n    width: \"75%\",\r\n    backgroundColor: \"rgba(0,0,0,0)\",\r\n  },\r\n  app: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  imageRoot: {\r\n    height: \"20%\",\r\n    width: \"75%\",\r\n    display: \"block\",\r\n    paddingTop: \"10%\",\r\n    margin: \"auto\",\r\n    objectFit: \"cover\",\r\n  },\r\n});\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [country, setCountry] = React.useState(\"China\");\r\n  const [city, setCity] = React.useState(\"Beijing\");\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <div className={classes.leftArea}>\r\n        <img className={classes.imageRoot} src={Weather} alt={\"weather\"} />\r\n        <Sidebar country={country} setCountry={setCountry} setCity={setCity} />\r\n      </div>\r\n      <div className={classes.rightArea}>\r\n        <TodayWeather city={city} country={country} />\r\n        <FutureWeather city={city} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\ndocument.body.style.margin = \"0\";\ndocument.body.style.overflow = \"hidden\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}